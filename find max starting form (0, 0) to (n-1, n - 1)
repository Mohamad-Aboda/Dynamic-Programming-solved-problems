#include <iostream>
#include <set>
#include <algorithm>
#include <cstring>
using namespace std;
const int oo = 1e6;
int dp[100][100];
int arr[100][100];
int n;
int solve(int l, int r) {
    // base case 
    if (l == n - 1 && r == n - 1)return arr[l][r];
    if (dp[l][r] != -1)return dp[l][r];

    int& ret = dp[l][r];
    if (l < n - 1 && r < n - 1)
        ret = arr[l][r] + max(solve(l, r + 1), solve(l + 1, r));
    else if (l == n - 1)
        ret = arr[l][r] + solve(l, r + 1);
    else
        ret = arr[l][r] + solve(l + 1, r);
    return ret;
}
int main() {
    cin >> n;
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            cin >> arr[i][j];

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j)
            cout << arr[i][j];
        cout << endl;
    }
    memset(dp, -1, sizeof dp);
    int res = solve(0, 0);
    cout << res << endl;
    return 0;
}
